$browser-default-font-size: 40px !default;
$pixelBase : 40px !default;
//pxTorem，设计稿是750的
@function pxTorem($px, $is640:false) {
  @if $px == 0 or $px == 0px {
    @return 0;
  }
  @else {
    @if $is640 {
      @return $px / $browser-default-font-size * 1rem;
    }
    @else {
      @return $px / $browser-default-font-size / 1.171875 * 1rem;
    }
  }
}
@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flexboxColumn {
  box-orient: vertical;
  -webkit-flex-flow: column;
      -ms-flex-flow: column;
          flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
}

@mixin flexboxAlignCenter {
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items:center;
}

@mixin flexboxJustifyCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

@mixin flexboxAbsCenter {
  @include flexboxAlignCenter;
  @include flexboxJustifyCenter;
}

@mixin flex($values:1) {
  display: block;
  -webkit-box-flex-grow: $values;
  -moz-box-flex-grow:  $values;
  -webkit-flex-grow:  $values;
  -ms-flex-grow:  $values;
  flex-grow:  $values;
}
// 主要是防止文字超长后挤压兄弟DOM
@mixin flexNoShrink {
  -webkit-box-flex-shrink: 0;
  -moz-box-flex-shrink:  0;
  -webkit-flex-shrink:  0;
  -ms-flex-shrink:  0;
  flex-shrink:  0;
}

//多参数转rem
@function rem($values) {
  $list: (); /* 存储转变后的值 */

  @each $value in $values { /* 遍历传入的值 */

    @if $value == 0 or $value == auto { /* 0 和 auto 原样返回 */
      $list: append($list, $value);
    }

    @else {
      $unit: unit($value);    /* 取单位 */
      $val: parseInt($value); /* 取数字值 */

      @if $unit == "px" {  /* 转换px值 */
        $list: append($list, ($val / $pixelBase + rem));
      }

      @if $unit == "rem" { /* rem值不转换 */
        $list: append($list, $value);
      }
    }
  }

  @return $list; /* 返回值列表 */
}
//文字省略号
@mixin textoverflow {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
// 多行文本
@mixin textmultiline($line:2) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  overflow: hidden;
  text-overflow: ellipsis;
}
//垂直和水平都居中
@mixin centers($width:100px,$height:100px){
  position: absolute;
  left:0;right:0;bottom:0;top:0;
  margin:auto;
  width:$width;
  height:$height;
}
//对话框 垂直水平居中
@mixin dialog {
  position:absolute;
  top: 50%; left: 50%;
  transform: translate(-50%, -50%);
}

//浏览器前缀
@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}

@mixin absCenter($sprite,$name,$toRem:true){
  $ml: ceil(image-width(sprite-file($sprite,$name)) / 4 * -1);
  $mt: ceil(image-height(sprite-file($sprite,$name)) / 4 * -1);
  @if $toRem {
      $ml: pxTorem($ml);
      $mt: pxTorem($mt);
  }
  position: absolute;
  top:50%;
  left:50%;
  margin-left: $ml ;
  margin-top:  $mt ;
  @include s2b($sprite,$name,$toRem);
}


//
@mixin coverimg($path,$toBase64:true){
  $width: ceil(image-width($path) / 2);
  $height: ceil(image-height($path) / 2);

  $width: pxTorem($width);
  $height: pxTorem($height);

  width: $width;
  height: $height;

  @if $toBase64 {
    background-image:inline-image($path);
  } @else {
    background-image:image-url($path);
  }
  background-size:cover;
  background-repeat:no-repeat;
}


@mixin imgCenter($sprite,$name,$toRem:true){
  $ml: ceil(image-width(sprite-file($sprite,$name)) / 4 * -1);
  $mt: ceil(image-height(sprite-file($sprite,$name)) / 4 * -1);
  @if $toRem {
    $ml: pxTorem($ml);
    $mt: pxTorem($mt);
  }
  position: absolute;
  left:50%;
  margin-left: $ml ;
  @include s2b($sprite,$name,$toRem);
}
// 静态图片
@mixin staticImg($path,$toRem:true,$toBase64 : false,$isbg : false){
  $width: ceil(image-width($path) / 2);
  $height: ceil(image-height($path) / 2);
  @if $toRem {
    $width: pxTorem($width);
    $height: pxTorem($height);
  }
  @if $isbg == false{
    width: $width;
    height: $height;
  }
  @if $toBase64 {
    background-image:inline-image($path);
  } @else {
    background-image:image-url($path);
  }
  background-size:100% auto;
  background-repeat:no-repeat;
}
@mixin imgInfo($sprite, $name,$toRem:true){
  $width: ceil(image-width(sprite-file($sprite, $name)) / 2);
  $height: ceil(image-height(sprite-file($sprite, $name)) / 2);
  @if $toRem {
    $width: pxTorem($width);
    $height: pxTorem($height);
  }
  width: $width;
  height: $height;
}
//compass 二倍图转rem
@mixin s2b($sprite, $name, $toRem:true) {
  $pos_x: floor(nth(sprite-position($sprite, $name), 1) / 2);
  $pos_y: floor(nth(sprite-position($sprite, $name), 2) / 2);
  $width: ceil(image-width(sprite-file($sprite, $name)) / 2);
  $height: ceil(image-height(sprite-file($sprite, $name)) / 2);
  $size_w: ceil(image-width(sprite-path($sprite)) / 2);
  $size_h: ceil(image-height(sprite-path($sprite)) / 2);
  @if $toRem {
    $pos_x: pxTorem($pos_x);
    $pos_y: pxTorem($pos_y);
    $width: pxTorem($width);
    $height: pxTorem($height);
    $size_w: pxTorem($size_w);
    $size_h: pxTorem($size_h);
  }
  background-image: $sprite;
  background-repeat: no-repeat;
  background-position: $pos_x $pos_y;
  background-size: $size_w $size_h;
  //background-size: $size_w auto;
  height: $height;
  width: $width;
}

//compass 二倍图转rem
@mixin imgMediaquery($sprite, $name, $num) {
  $pos_x: floor(nth(sprite-position($sprite, $name), 1) / 2) * $num;
  $pos_y: floor(nth(sprite-position($sprite, $name), 2) / 2) * $num;
  $width: ceil(image-width(sprite-file($sprite, $name)) / 2) * $num;
  $height: ceil(image-height(sprite-file($sprite, $name)) / 2) * $num;
  $size_w: ceil(image-width(sprite-path($sprite)) / 2) * $num;
  $size_h: ceil(image-height(sprite-path($sprite)) / 2) * $num;
  background-image: $sprite;
  background-position: $pos_x $pos_y;
  background-size: $size_w $size_h;
  height: $height;
  width: $width;
}

@mixin bp($sprite,$name,$toRem:true){
  $pos_x: floor(nth(sprite-position($sprite, $name), 1) / 2);
  $pos_y: floor(nth(sprite-position($sprite, $name), 2) / 2);
  @if $toRem {
    $pos_x: pxTorem($pos_x);
    $pos_y: pxTorem($pos_y);
  }
  background-position: $pos_x $pos_y;
}

/* 160912 */
// 吸顶元素
// $dom: [内容器选择器]
// $height: [外容器站位高度]
// $top: [吸顶时距离顶部距离]
// $zIndex: [z-index数值]
// 使用：@include sticky('ul', 40px, 0, 10); 或 @include sticky('.wrap', 40px);
@mixin sticky($dom, $height, $top:0, $zIndex:10) {
  position: relative;
  height: $height;
  z-index: $zIndex;
  &.fixed #{$dom} {
    position: fixed;
    top: $top;
    left: 0;
    right: 0;
    margin: 0 auto;
    // max-width: 540px;
    max-width: 640px;
    z-index: $zIndex;
  }
  @supports (position: -webkit-sticky) {
    & {
      position: -webkit-sticky;
      top: $top;
      height: auto;
      &.fixed #{$dom} {position: relative; top: 0;}
    }
  }
}

/* 161013 */
// 百分比背景图
// $spriteWidth 雪碧图的宽度px
// $spriteHeight 雪碧图的高度px
// $iconWidth 需要显示icon的宽度px
// $iconHeight 需要显示icon的高度px
// $iconX icon的原始x坐标
// $iconY icon的原始y坐标
@mixin bgPosition($spriteWidth, $spriteHeight, $iconWidth, $iconHeight, $iconX, $iconY){
  $ratioWidth: 0;
  $ratioHeight: 0;
  @if $spriteWidth - $iconWidth == 0 {
    $ratioWidth: 0;
  }
  @else {
    $ratioWidth: ($iconX / ($spriteWidth - $iconWidth)) * 100%;
  }
  @if $spriteHeight - $iconHeight == 0 {
    $ratioHeight: 0;
  }
  @else {
    $ratioHeight: ($iconY / ($spriteHeight - $iconHeight)) * 100%;
  }
  background-position: $ratioWidth $ratioHeight;
}

/* 2倍屏边 */
@mixin retinaBorder($color, $direction:'bottom', $pseudo:'after') {
  border-#{$direction}: 1px solid $color;
  @media screen and (-webkit-min-device-pixel-ratio:2){
    position: relative;
    border-#{$direction}: 0;
    &:#{$pseudo} {
      content: '';
      position: absolute;
      background: $color;
      @if $direction == 'top' or $direction == 'bottom' {
        left: 0;
        width: 100%; height :1px;
        transform: scaleY(0.8);
        @if $direction == 'top' {
          top: 0;
          transform-origin: center top;
        } @else {
          bottom: 0;
          transform-origin: center bottom;
        }
      } @elseif $direction == 'right' or $direction == 'left' {
        top: 0;
        width: 1px; height: 100%;
        transform: scaleX(0.8);
        @if $direction == 'right' {
          right: 0;
          transform-origin: right center;
        } @else {
          left: 0;
          transform-origin: left center;
        }
      }
    }
  }
}

@mixin commonBoxShadow {
  box-shadow: 0 3px 7.5px rgba(#72636e, 0.15);
}
@mixin commonDropShadow {
  filter: drop-shadow(0 3px 7.5px rgba(#72636e, 0.15));
}

/* 调色板 */
$colorPanel: #f588aa, #e687c6, #8db6e0, #f4a17a, #fbbc57, #f58c8c, #a6b3d4, #c097d5, #a4a6e1, #9dccc5;
$couponColor: (jing: #f76c6d, dong: #50c7c9, postage: #7ea7ce, iou: #d5b172, outdate: #9d9d9d);
// @mixin toning($bg, $) {
//     @for $i from 1 through 10 {
//         .color-#{$i} {
//             $color: nth($colorPanel, $i);
//         }
//     }
// }
